{
  "swagger": "2.0",
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "authorizationUrl": "http://localhost:5000/",
      "name": "Authorization",
      "scheme": "bearer",
      "in": "header"
    }
  },
  "info": {
    "version": "1.0.0",
    "title": "Swagger users",
    "description": "A sample API that uses a userstore as an example to demonstrate features in the swagger-2.0 specification",
    "termsOfService": "http://localhost:5000/",
    "contact": {
      "name": "Swagger API Team"
    },
    "license": {
      "name": "MIT"
    }
  },
  "host": "localhost:5000",
  "basePath": "/",
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/admin/users": {
      "get": {
        "tags": ["admin"],
        "description": "All user informations",
        "operationId": "Find all users",
        "produces": [
          "application/json",
          "application/xml",
          "text/html",
          "text/xml"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/admin/users/{id}": {
      "get": {
        "tags": ["admin"],
        "description": "One user informations",
        "operationId": "Find one users",
        "produces": [
          "application/json",
          "application/xml",
          "text/html",
          "text/xml"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Find users for admin",
            "required": true,
            "type": "number",
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["users"],
        "description": "Returns all users from the system that the user has access to",
        "operationId": "find users",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/html"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "tags to filter by",
            "required": false,
            "type": "array",
            "items": {
              "type": "object"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "post": {
        "tags": ["users"],
        "description": "Creates a new User in the store.  Duplicates are allowed",
        "operationId": "addUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User to add to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "put": {
        "tags": ["users"],
        "description": "Creates a new User in the store.  Duplicates are allowed",
        "operationId": "updateUser",
        "produces": ["application/json"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User to add to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "description": "deletes a single User based on the ID supplied",
        "operationId": "deleteUser",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of User to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/foods": {
      "post": {
        "tags": ["foods"],
        "description": "One food update",
        "operationId": "Update One food",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "food",
            "in": "body",
            "description": "food's same information",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/NewFood"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "Food",
            "schema": {
              "$ref": "#/definitions/Food"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "get": {
        "tags": ["foods"],
        "description": "All foods informations",
        "operationId": "Find All foods",
        "parameters": [
          {
            "name": "limit",
            "in": "path",
            "description": "how much return limit foods",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "Foods",
            "schema": {
              "$ref": "#/definitions/Food"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/foods/{id}": {
      "get": {
        "tags": ["foods"],
        "description": "One food informations",
        "operationId": "Find One food",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "how much return limit foods",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "Food",
            "schema": {
              "$ref": "#/definitions/Food"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "put": {
        "tags": ["foods"],
        "description": "One food update",
        "operationId": "Update One food",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "send food id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "food",
            "in": "body",
            "description": "food's same information",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/NewFood"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "Food",
            "schema": {
              "$ref": "#/definitions/Food"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },

      "delete": {
        "tags": ["foods"],
        "description": "deletes a single Food based on the ID supplied",
        "operationId": "delete Food",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Food to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Food deleted"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/orders": {
      "post": {
        "tags": ["orders"],
        "description": "One Order update",
        "operationId": "Update One Order",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order",
            "in": "body",
            "description": "Order's same information",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/NewOrder"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "Order",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "get": {
        "tags": ["orders"],
        "description": "All Orders informations",
        "operationId": "Find All Orders",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "path",
            "description": "how much return limit Orders",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "Orders",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": ["orders"],
        "description": "One Order informations",
        "operationId": "Find One Order",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "how much return limit Orders",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "Order",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "put": {
        "tags": ["orders"],
        "description": "One Order update",
        "operationId": "Update One Order",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "send Order id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Order",
            "in": "body",
            "description": "Order'x`x`s same information",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/NewOrder"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "Order",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },

      "delete": {
        "tags": ["orders"],
        "description": "deletes a single Order based on the ID supplied",
        "operationId": "delete Order",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Order to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Food deleted"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewUser"
        },
        {
          "required": ["id"],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      ]
    },
    "NewUser": {
      "type": "object",
      "required": ["username", "contact", "password", "role"],
      "properties": {
        "username": {
          "type": "string"
        },
        "contact": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Food": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewFood"
        },
        {
          "required": ["id"],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      ]
    },
    "NewFood": {
      "type": "object",
      "required": ["title", "price", "description"],
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "integer"
        },
        "now": {
          "type": "boolean"
        }
      }
    },
    "Order": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewOrder"
        },
        {
          "required": ["id"],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      ]
    },
    "NewOrder": {
      "type": "object",
      "required": ["user_id", "food_id"],
      "properties": {
        "user_id": {
          "type": "integer"
        },
        "food_id": {
          "type": "integer"
        }
      }
    },
    "ErrorModel": {
      "type": "object",
      "required": ["code", "message"],
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
